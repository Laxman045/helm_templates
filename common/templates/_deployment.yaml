{{- define "common.deployment" -}} #declare this as a template
# this voodoo merges the various value files
{{- $common := dict "Values" .Values.common -}}  
{{- $noCommon := omit .Values "common" -}} 
{{- $overrides := dict "Values" $noCommon -}} 
{{- $noValues := omit . "Values" -}} 
{{- with merge $noValues $overrides $common -}}
{{- $replicaCount := .Values.replicaCount | default .Values.global.replicaCount -}}
# end voodoo
apiVersion: apps/v1
kind: Deployment
{{ template "common.metadata" . }} 
spec:
  minReadySeconds: {{ .Values.minReadySeconds | default .Values.global.minReadySeconds }}
  replicas: {{ $replicaCount }}
  strategy:
    type: RollingUpdate
    maxUnavailable: 0
    maxSurge: {{ mul $replicaCount  2 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if (coalesce .Values.priorityClassName .Values.global.priorityClassName) }}
      priorityClassName: {{ (coalesce .Values.priorityClassName .Values.global.priorityClassName) }}
    {{- end }}
      imagePullSecrets:
        - name: {{ .Values.ImagePullSecret }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: appsettings
              mountPath: /app/appsettings
          {{- range $volume := .Values.additionalVolumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
           {{- end }}
          livenessProbe:
            exec:
              comment: "TODO replace this with a call to the endpoint that returns 200 for healthy or 5?? for Unhealthy when it's everywhere"
              command: "/bin/bash checkHealth(){ if [[  `curl -s http://localhost/health --insecure  | awk '{gsub(\",\\\"checks\\\":\\\\[.*\\\\]\", \"\");print}' |  grep -zoP '\"status_code\":\s*\K[^\s,]*(?=\s*,)'` == 0* ]] ; then return 0 ; else return  1; fi } && checkHealth"
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 60
            periodSeconds: 90
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 60
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          resources:
            {{- toYaml (default .Values.global.resources  .Values.resources  )   | nindent 12 }}
          env:
          - name: ReleaseTime
            value: {{ .Release.Time.Seconds | quote }}
          - name: ClientStateName
            value: {{ .Values.global.ClientStateName | quote }}
          - name: ASPNETCORE_ENVIRONMENT
            value: {{ .Values.global.Environment | quote }}
          - name: APPSETTINGS_LOCATION
            value: "/app/appsettings" 
          - name: APPSETTING_LOCATION
            value: "/app/appsettings"
          {{- if .Values.LoggingKey }}
          - name: Serilog__WriteTo__0__Args__apiKey
            value: {{ .Values.LoggingKey | quote }}{{ end }}
          - name: DoNotRequireHttps
            value: "true"
          {{- range $key, $val := .Values.additional_env_vars }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end}}
      volumes:
        - name: appsettings
          configMap:
            name: {{ include "common.appsettings.name" . }}
      {{- range $volume := .Values.additionalVolumes }}
        - name: {{ $volume.name }}
          configmap:
            name: {{ tpl $volume.configMapName $ }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
{{- end -}}